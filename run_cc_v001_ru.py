#import'ы, которые гарантированно сработают
import time
import json
import random
import smtplib
import datetime

#жизненно важная информация
__author__ = 'Elisey Sharov aka ZerZ™(or ZerZru)'
version = '0.0.1'
language = 'python'
country = 'Russian Federation'
license = 'GNU GPL 3.0'

try:
	#проверка наличия DLC у пользователя
	import DLC
	import DLC_Lada
	import DLC_Audi
	import DLC_Skoda
	import DLC_BMW
	import DLC_Nissan
	import DLC_Toyota
	import DLC_F1
	print('Обнаружены DLC')
except:
	print('DLC не обнаружены. Вы можете приоберсти их на официальном сайте.')

nickname = input('Введите имя(или ник): ')
company = input('Введите название компании: ')

#сохранение и загрузка игры
#try:
#	проверка чтения данных в файле save.json
#	print('Загрузка завершена.')
#except:
	#если игра запускается первый раз (т.е. файла save.json ещё нет), создаётся файл save.json и в него записываются значения переменных
	#print('Сохранение завершено.')
try:
	#проверка запуска игры для дальнейшео написания в лог
	now = datetime.datetime.now()
	def logs(filename, content, mode='a'):
			#print('New log has been added!')
			with open(filename, mode=mode) as f:
				f.write(content)
	#print('Work')
	logs('log.txt', now.strftime("[%d-%m-%Y %H:%M] Game has been run. Nickname: {}, company: {}.".format(nickname, company)))

	def details():
		print('Список доступных деталей для версии 0.0.1: ')
		print('Двигатели: \n 1) Мотор 2101 "Копейка" \n 2) Мотор ВАЗ 2103 \n 3) Мотор ВАЗ 2106 \n 4) Мотор ВАЗ 21083 \n 5) Мотор ВАЗ 2111 \n 6) Двигатель КАМАЗ 43101 \n 7) Двигатель КАМАЗ 55111 \n 8) Двигатель КАМАЗ 55111 \n 9) Двигатель КАМАЗ 43114 \n 10) Двигатель КАМАЗ 4925 \n 11) Двигатель КАМАЗ 6520 \n 12) 4A-FE \n 13) 4E-GE 16V \n 14) 8A-FE \n 15) 7A-FE LB \n 16) Alfa Romeo V6 Busso')
		print('Салоны: \n 1) Кожанный \n 2) Советский классический \n 3) Деревянный')
		print('Колёса: \n 1) Стальные \n 2) Michelin \n 3) Золотые GTA')
		return None

	def ghelp():
		print('1) Вызвать help: ghelp() \n 2) Узнать, как зарабатывать: how_get_a_money() \n 3) Создать новую машину: new_car() \n 4) Узнать названия деталей, доступных на данный момент: details() \n 5) Найти работу: works() \n 6) Выйти из игры с сохранением всех данных: gquit() \n 7) Узнать, как создавать автомобиль: how_create_a_auto() 8) Узнать почту для предложений по игре: mail()')
		return None

	def gquit():
		print('Вы собираетесь выйти из игры. Идёт сохранение данных. Пожалуйста, подождите...')
		#сохранение в save.json
		def logs(filename, content, mode='w'):
			#print('New log has been added!')
			with open(filename, mode=mode) as f:
				f.write(content)
		logs('save.json',)
		time.sleep(5)
		quit()

	def how_get_a_money():
		print('1) Продавать автомобили: самый дорогостоящий способ, но очень прибыльный. \n 2) Быть на работе: самый долгий способ: чтобы накопить 1000$, потребуется около 20 минут(если вы на самой престижной работе). На работе средне-низкого уровня понадобится от часа и более.')
		# 3) Оставить игру в фоне. За каждый час, проведённый в игре, даётся 100$
		return None

	def works():
		money = int('1000')
		print('Выберете интересующую вас работу: \n 1) Подметать дворы \n 2) Мыть автомобили \n 3) "Свободная касса" \n 4) Получить образование(недоступно)')
		class work:
			w1 = int('1') #10$
			w2 = int('2') #15$
			w3 = int('3') #30$
			#w4 = print('Чтобы получить образование, введите ptu()') #поняли, типо функция ПТУ называется
			a = int(input('Введите номер: '))

			if a == w1:
				print('Вы захотели подметать дворы. За эту работу вам заплатят 10$ по истечении 5 минут')
				time.sleep(10)
				print('Вы закончили работу. На ваш счёт было переведено 10$. Узнать состояние своего счёта можно, введя money') #в тестовой версии время снижено до 10 секунд 
				money + int('10')
			elif a == w2:
				print('Вы захотели мыть автомобили. За эту работу вам заплатят 15$ по истечении 10 минут') #в тестовой версии время снижено до 15 секунд
				time.sleep(15)
				print('Вы закончили работу. На ваш счёт было переведено 15$. Узнать состояние своего счёта можно, введя money')
				money + int('15')
			elif a ==w3:
				print('Вы захотели быть кассиром. За эту работу вам заплатят 30$ по истечении 20 минут')  #в тестовой версии время снижено до 20 секунд
				time.sleep(20)
				print('Вы закончили работу. На ваш счёт было переведено 30$. Узнать состояние своего счёта можно, введя money')
				money + int('30')
			else:
				print('You input a non avialable number. Try again or write me, if you have idea for my project')
				work()
		return None

	def how_create_a_auto():
		print('Добро пожаловать в мануал по созданию автомобиля!')
		print('Начало работы: \n При запуске функции new_car(), вам предложат дать название для вашей мастерской. Если название будет занято, вам придётся ввести другое значение. После создания мастерской вам предложат дать название, номер и ID автомобилю. Это делается для создания коллекции и истории ваших автомобилей: ваш игровой путь наверх. После создания паспорта автомобиля, вы перейдёте к технической части. \n Техническая часть \n В версии 0.0.1 доступны 3 типа деталей: двигатель, салон и колёса. К двигателю представлено 16 деталей, к салону и колёсам - 3. Узнать список и названия деталей, которые доступны для версии 0.0.1 можно, введя details(). Итак: вам предложат ввести названия для 3 типов деталей. После обработки паспорт автомобиля обновится: в нём будут указаны ID, номер, название модели и комплектующие. Вы можете выкинуть паспорт и создать новую машину, либо принять изменения и выпустить автомобиль. На данный момент плата не взимается, поэтому выпуск и стоиомость деталей будет за счёт государства. После выпуска вам на счёт будут поступать деньги. И на этом пока что всё закончится, поэтому вы должны ждать обновлений. Вы можете помочь выпуску обновлений, если будете поддеживать меня материально. Подробнее: money_help(). Спасибо, что играете в CarCreator!')
		return None

	def mail():
		print('Почта для ваших предложений: scg-publicmail@yandex.ru')
		pass

	def support():
		print('Если у вас техническая проблема, какая-то функция не работает или у вас есть другой вопрос или предложение, вы можете написать нам на почту(введите функцию mail()) или используйте данную форму. Если у эта форма вам не подходит, посетите scgofficial.esy.es/GitHub/#support.')
		a1 = input('Введите ваш вопрос. Пожалуйста, указывайте любую информацию, которая нам поможет решить вашу проблему. Итак: ')
		f = open('question.txt', 'w')
		f.write(a1)
		f.close()
		print('Ваш вопрос записан в файл question.txt. Пожалуйста, отправьте его на нашу почту. Узнать её можно, написав mail()')
		pass
		
	def new_car():
		workshop = input('Введите название для мастерской: ')
		w1 = 'Steam'
		if workshop == w1:
			print('Это название уже занято или является зарегистрированным товарным знаком')
			workshop = input('Введите название для мастерской: ')
			pass
		print('Добро пожаловать в мастерскую {}! Прочитайте мануал по созданию автомобилей, если вы этого ещё не сделали.'.format(workshop))
		car_name = input('Введите название модели: ')
		car_name_ver = int(input('Введите номер автомобиля: '))
		car_id = int(input('Введите ID автомобиля: '))
		print('Вы создали автомобиль с ID: {}, названием {} и номером {}. Теперь давайте начнём собирать автомобиль!'.format(car_id, car_name, car_name_ver))
		engine = input('Введите двигатель: ')
		salon = input('Введите салон: ')
		wheel = input('Введите колёса: ')
		e1 = 'Мотор 2101 "Копейка"'
		e2 = 'Мотор ВАЗ 2103'
		e3 = 'Мотор ВАЗ 2106'
		e4 = 'Мотор ВАЗ 21083'
		e5 = 'Мотор ВАЗ 2111'
		e6 = 'Двигатель КАМАЗ 43101'
		e7 = 'Двигатель КАМАЗ 55111'
		e8 = 'Двигатель КАМАЗ 43114'
		e9 = 'Двигатель КАМАЗ 4925'
		e10 = 'Двигатель КАМАЗ 6520'
		e11 = '4A-FE'
		e12 = '4E-GE 16V'
		e13 = '8A-FE'
		e14 = '7A-FE LB'
		e15 = 'Alfa Romeo V6 Busso'
		s1 = 'Кожанный'
		s2 = 'Советский классический'
		s3 = 'Деревянный'
		w1 = 'Стальные'
		w2 = 'Michelin'
		w3 = 'Стальные GTA'
		if engine == e1:
			e_input = 'Мотор ВАЗ 2101 "Копейка"'
		elif engine == e2:
			e_input = 'Мотор ВАЗ 2103'
		elif engine == e3:
			e_input = 'Мотор ВАЗ 2106'
		elif engine == e4:
			e_input = 'Мотор ВАЗ 21083'
		elif engine == e5:
			e_input = 'Мотор ВАЗ 2111'
		elif engine == e6:
			e_input = 'Двигатель КАМАЗ 43101'
		elif engine == e7:
			e_input = 'Двигатель КАМАЗ 55111'
		elif engine == e8:
			e_input = 'Двигатель КАМАЗ 43114'
		elif engine == e9:
			e_input = 'Двигатель КАМАЗ 4925'
		elif engine == e10:
			e_input = 'Двигатель КАМАЗ 6520'
		elif engine == e11:
			e_input = '4A-FE'
		elif engine == e12:
			e_input = '4E-GE 16V'
		elif engine == e13:
			e_input = '8A-FE'
		elif engine == e14:
			e_input = '7A-FE LB'
		elif engine == e15:
			e_input = 'Alfa Romeo V6 Busso'
		elif engine == e16:
			e_input = 'Alfa Rome v6 Busso'
		else:
			print('В базе данных не найдены совпадения с вашей деталью. Проверьте правильность введения детали или предлоэите её добавить. Узнать почту для предложений можно, введя mail()')
			engine = input('Введите двигатель: ')
			pass
		if salon == s1:
			s_input = 'Кожанный'
		elif salon == s2:
			s_input = 'Советский классический'
		elif salon == s3:
			s_input = 'Деревянный'
		else:
			print('В базе данных не найдены совпадения с вашей деталью. Проверьте правильность введения детали или предлоэите её добавить. Узнать почту для предложений можно, введя mail()')
			salon = input('Введите салон: ')
			pass
		if wheel == w1:
			w_input = 'Стальные'
		elif wheel == w2:
			w_input = 'Michelin'
		elif wheel == w3:
			w_input = 'Золотые GTA'
		else:
			print('В базе данных не найдены совпадения с вашей деталью. Проверьте правильность введения детали или предлоэите её добавить. Узнать почту для предложений можно, введя mail()')
			wheel = input('Введите колёса: ')
			pass
		def compilar_car():
			car_answer = input('Вы создали автомобиль с номером {}, ID {}, названием {}, двигателем {}, {} салоном и {} колёсами. Вы подтверждаете свой выбор? (Да/Нет): '.format(car_name_ver, car_id, car_name, e_input, s_input, w_input))
			yes = 'Да'
			no = 'Нет'
			if car_answer == yes:
				print('Ваша машина была выпущена. Ждём реакцию на неё 10 секунд...')
				rp_real = int(random.randint(0, 1000))
				time.sleep(10)
				print('Вы заработали {} доллара(ов)!'.format(rp_real))
			elif car_answer == no:
				print('Вы выбросили проект на помойку.')
			else:
				print('Ваш вариант ответа не найден. Проверьте правильность ввода данных.')
				car_answer = input('Вы подтверждаете свой выбор? (Да/Нет):')
				return money + rp_real
		compilar_car()
		return None

except:
	#print("Don't work")
	logs('log.txt', now.strftime("[%d-%m-%Y %H:%M] Game has been crashed. Check code or re-installing game."))